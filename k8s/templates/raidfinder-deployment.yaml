apiVersion: apps/v1
kind: Deployment
metadata:
  name: raidfinder
  labels:
    app: raidfinder
spec:
  replicas: 1
  selector:
    matchLabels:
      app: raidfinder
  template:
    metadata:
      labels:
        app: raidfinder
    spec:
      containers:
      - name: raidfinder
        image: 833642098503.dkr.ecr.us-east-2.amazonaws.com/raidfinder-containers:latest
        ports:
        - name: "p3000"
          containerPort: 3000
        volumeMounts:
          - mountPath: /usr/src/app/secrets/accounts
            name: accounts-secret
            readOnly: true
          - mountPath: /usr/src/app/secrets/twitter
            name: twitter-tokens-secret
            readOnly: true
      volumes:
        - name: accounts-secret
          secret:
            secretName: accounts-secret
            items:
            - key: accounts_json
              path: accounts.json
        - name: twitter-tokens-secret
          secret:
            secretName: twitter-tokens-secret
            items:
            - key: twitter_tokens_json
              path: twittertokens.json
---
apiVersion: v1
kind: Service
metadata:
  name: raidfinder-service
  annotations:
    # service.beta.kubernetes.io/aws-load-balancer-proxy-protocol: "*"
    # Backend talks over http and ws protocols so 'http' cannot be used because it does not allow ws upgrade.
    service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    # Non-sensitive information. Replace with your own cert arn if running your own instance
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: arn:aws:acm:us-east-2:833642098503:certificate/ab6018f0-5684-4a8d-bcc4-985350760284
    # Only run SSL (Secure TCP) on the port named "https" below.
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "https"
  labels:
    app: raidfinder
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    targetPort: 3000
  - name: https
    port: 443
    targetPort: 3000
  selector:
    app: raidfinder
